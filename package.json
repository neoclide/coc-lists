{
  "name": "coc-lists",
  "version": "1.5.2",
  "description": "Basic list sources for coc.nvim",
  "main": "lib/index.js",
  "publisher": "chemzqm",
  "keywords": [
    "coc.nvim",
    "list"
  ],
  "engines": {
    "coc": "^0.0.80"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/neoclide/coc-lists.git"
  },
  "scripts": {
    "prepare": "node esbuild.js"
  },
  "activationEvents": [
    "*"
  ],
  "contributes": {
    "configuration": {
      "type": "object",
      "properties": {
        "session.directory": {
          "type": "string",
          "default": "",
          "description": "Directory for store session files, default to ~/.vim/sessions when empty."
        },
        "session.restartOnSessionLoad": {
          "type": "boolean",
          "default": false,
          "description": "Restart vim with cwd changed on session load, support neovim on iTerm2 only."
        },
        "session.saveOnVimLeave": {
          "type": "boolean",
          "default": true,
          "description": "Save session on VimLeavePre."
        },
        "lists.disabledLists": {
          "type": "array",
          "default": [],
          "description": "List names to disable form load.",
          "items": {
            "type": "string"
          }
        },
        "list.source.directories.command": {
          "type": "string",
          "default": "",
          "description": "Command used for search for directories"
        },
        "list.source.directories.args": {
          "type": "array",
          "default": [],
          "description": "Arguments for search command",
          "items": {
            "type": "string"
          }
        },
        "list.source.directories.excludePatterns": {
          "type": "array",
          "default": [],
          "description": "Minimatch patterns that should be excluded.",
          "items": {
            "type": "string"
          }
        },
        "list.source.files.command": {
          "type": "string",
          "default": "",
          "description": "Command used for search for files"
        },
        "list.source.files.args": {
          "type": "array",
          "default": [],
          "description": "Arguments for search command",
          "items": {
            "type": "string"
          }
        },
        "list.source.files.excludePatterns": {
          "type": "array",
          "default": [],
          "description": "Minimatch patterns that should be excluded.",
          "items": {
            "type": "string"
          }
        },
        "list.source.files.filterByName": {
          "type": "boolean",
          "default": false,
          "description": "Filter files by name only"
        },
        "list.source.mru.maxLength": {
          "type": "number",
          "default": 1000,
          "description": "Max length of mru list."
        },
        "list.source.mru.ignoreGitIgnore": {
          "type": "boolean",
          "default": false,
          "description": "Ignore git ignored files."
        },
        "list.source.mru.excludePatterns": {
          "type": "array",
          "default": [
            "**/.git/*",
            "/tmp/*"
          ],
          "description": "Minimatch patterns that should be excluded.",
          "items": {
            "type": "string"
          }
        },
        "list.source.mru.filterByName": {
          "type": "boolean",
          "default": false,
          "description": "Filter files by name only"
        },
        "list.source.grep.useLiteral": {
          "type": "boolean",
          "default": true,
          "description": "Use literal match unless specified regex options, default: true."
        },
        "list.source.grep.command": {
          "type": "string",
          "default": "rg",
          "description": "Command used for grep, default to 'rg'.",
          "enum": [
            "rg",
            "ag"
          ]
        },
        "list.source.grep.maxColumns": {
          "type": "number",
          "default": 300,
          "description": "Don't print lines longer than this limit in bytes, ripgrep only."
        },
        "list.source.grep.maxLines": {
          "type": "number",
          "default": 0,
          "description": "Limit the number of matching lines in interactive mode, 0 is not limited."
        },
        "list.source.tags.command": {
          "type": "string",
          "default": "ctags -R .",
          "description": "Command used for generate tags."
        },
        "list.source.grep.args": {
          "type": "array",
          "default": [],
          "description": "Arguments for grep command, always used for grep",
          "items": {
            "type": "string"
          }
        },
        "list.source.grep.excludePatterns": {
          "type": "array",
          "default": [],
          "description": "Minimatch patterns of files that should be excluded, use .ignore file is recommended.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "commands": [
      {
        "command": "session.save",
        "title": "Save current vim state to session file."
      },
      {
        "command": "session.load",
        "title": "Load session by name."
      },
      {
        "command": "session.restart",
        "title": "Restart vim with current session."
      },
      {
        "command": "mru.validate",
        "title": "Validate mru files list, which remove files that doesn't exist."
      }
    ]
  },
  "author": "chemzqm@gmail.com",
  "license": "MIT",
  "devDependencies": {
    "@types/colors": "^1.2.1",
    "@types/find-up": "^4.0.0",
    "@types/minimatch": "^3.0.3",
    "@types/node": "10.12.0",
    "@types/which": "^1.3.2",
    "coc.nvim": "^0.0.81-next.1",
    "colors": "^1.4.0",
    "esbuild": "^0.8.29",
    "find-up": "^5.0.0",
    "minimatch": "^3.0.4",
    "mkdirp": "^1.0.4",
    "rimraf": "^3.0.2",
    "typescript": "^4.1.3",
    "vscode-uri": "^2.1.2",
    "which": "^2.0.2"
  },
  "dependencies": {}
}
